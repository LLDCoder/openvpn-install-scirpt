*******************************************************************************************
示例：							
							openvpn获得的地址：
								IP： 10.0.0.18
								GW： 10.0.0.17 (与IP成对出现)

							家里客户端本机上网地址：
								IP：172.18.22.155
								GW：172.18.16.1
							公司内外IP段：
								10.19.0.0
							服务端上网IP：
								10.19.45.193

							windows客户端命令行操作（未设置客户端默认路由走openvpn的情况下使用）：
								1. 设置客户端能直接访问公司内网 
								route add 10.19.0.0 mask 255.255.0.0 10.0.0.17
								2. 设置连接openvpn的静态路由
								route add 120.132.92.36 mask 255.255.255.255 172.18.16.1
								3. 设置所有上网走openvpn
								route add 0.0.0.0 mask 0.0.0.0 10.0.0.17
*******************************************************************************************
linux服务端：
	iptables -t nat -A POSTROUTING  -s 10.0.0.0/0  -j SNAT --to-source 10.19.45.193
	开启转发 echo 1 > /proc/sys/net/ipv4/ip_forward


让客户端默认路由走openvpn
	push "redirect-gateway def1 bypass-dhcp"

参数链接：
	https://www.ilanni.com/?p=9847

扩展：
server.conf
	client-config-dir /etc/openvpn/ccd  #cdd目录下对应的文件名为客户端证书名
		/etc/openvpn/ccd/client1:  ifconfig-push 10.8.0.2 10.8.0.3   
			ifconfig-push 后面是紧跟着两个连续的成组IP地扯，以第一个为客户端的IP地扯。

	duplicate-cn   #允许一个客户端证书同时被多个终端使用
	max-clients 1000  #客户端链接最大数量

	script-security 3 # 开启配置文件中自定义脚本
	auth-user-pass-verify ../checkpsw.sh via-env  #使用密码文件认证
	client-cert-not-required  #不检检查客户端证书
	username-as-common-name  #暂不明，和auth-user-pass-verify 一起使用

client.conf
	auth-user-pass #客户端开启密码认证


checkpsw.sh实例：

#!/bin/sh
###########################################################
# checkpsw.sh (C) 2004 Mathias Sundman <mathias@openvpn.se>
#
# This script will authenticate OpenVPN users against
# a plain text file. The passfile should simply contain
# one row per user with the username first followed by
# one or more space(s) or tab(s) and then the password.

PASSFILE="/usr/local/openvpn-2.3.17/psw-file"
LOG_FILE="/usr/local/openvpn-2.3.17/openvpn-password.log"
TIME_STAMP=`date "+%Y-%m-%d %T"`

###########################################################

if [ ! -r "${PASSFILE}" ]; then
  echo "${TIME_STAMP}: Could not open password file \"${PASSFILE}\" for reading." >> ${LOG_FILE}
  exit 1
fi

CORRECT_PASSWORD=`awk '!/^;/&&!/^#/&&$1=="'${username}'"{print $2;exit}' ${PASSFILE}`

if [ "${CORRECT_PASSWORD}" = "" ]; then 
  echo "${TIME_STAMP}: User does not exist: username=\"${username}\", password=\"${password}\"." >> ${LOG_FILE}
  exit 1
fi

if [ "${password}" = "${CORRECT_PASSWORD}" ]; then 
  echo "${TIME_STAMP}: Successful authentication: username=\"${username}\"." >> ${LOG_FILE}
  exit 0
fi

echo "${TIME_STAMP}: Incorrect password: username=\"${username}\", password=\"${password}\"." >> ${LOG_FILE}
exit 1
